---
- hosts: localhost
  connection: local
  become: true

  tasks:
  - name: Install a list of packages
    ansible.builtin.apt:
      pkg:
      - python3-pip
      - python3-psutil
      - openssh-server
      - scdaemon
      - paperkey
      - stow
      - zsh
      - fzf
      - zoxide
      - exa
      - htop
      - tmux
      - tree
      - pass
      - gnupg2
      - pwgen
      - sqlite3
      - libssl-dev
      - postgresql-15
      - ripgrep
      - rsync
      - librsync-dev
      - ncdu
      - ufw
      - nmap
      - libpam-yubico
      - libyubikey-dev
      - yubikey-personalization
      - yubikey-luks
      - wireshark
      - ninja-build
      - meson
      - gettext
      - cmake
      - apt-file
      - xbindkeys
      - whois
      - dnsutils
      - libpam-yubico
      - libyubikey-dev
      - yubikey-personalization
      - yubikey-luks
      - yubikey-manager
      - libpam-u2f
      - pcscd
      - libbz2-dev
      - libncurses-dev
      - libffi-dev
      - libreadline-dev
      - libsqlite3-dev
      - liblzma-dev
      - tk-dev
      - libasound2-dev
      - libudev-dev
      - kitty
      - kitty-doc
      - kitty-terminfo
      - fd-find
        #- snort
      - tldr
      - dconf-editor
      - trash-cli
      - unattended-upgrades
      - apt-listchanges
      - bsd-mailx
      - checkinstall
      - parallel
  - name: dark gnome
    become_user: matt
    community.general.dconf:
      key: /org/gnome/desktop/interface/gtk-theme
      value: "'Adwaita-dark'"
      state: present
  - name: dark gnome 2 2 2 2
    become_user: matt
    community.general.dconf:
      key: /org/gnome/desktop/interface/color-scheme
      value: "'prefer-dark'"
      state: present
  - name: dark gnome terminal
    become_user: matt
    community.general.dconf:
      key: /org/gnome/terminal/legacy/theme-variant
      value: "'dark'"
  - name: mouse natural direction
    become_user: matt
    community.general.dconf:
      key: /org/gnome/desktop/peripherals/mouse/natural-scroll
      value: 'true'
  - name: dark gnome terminal
    become_user: matt
    community.general.dconf:
      key: /org/gnome/desktop/peripherals/mouse/natural-scroll
      value: 'true'
  - name: automatic brightness off
    become_user: matt
    community.general.dconf:
      key: /org/gnome/settings-daemon/plugins/power/ambient-enabled
      value: 'false'
  - name: automatic suspend off
    become_user: matt
    community.general.dconf:
      key: /org/gnome/settings-daemon/plugins/power/sleep-inactive-ac-type
      value: "'nothing'"
  - name: blank screen 15 minutes
    become_user: matt
    community.general.dconf:
      key: /org/gnome/desktop/session/idle-delay
      value: "uint32 900"
  - name: brightness up
    become_user: matt
    community.general.dconf:
      key: /org/gnome/settings-daemon/plugins/media-keys/screen-brightness-up
      value: "['F12']" 
  - name: brightness down
    become_user: matt
    community.general.dconf:
      key: /org/gnome/settings-daemon/plugins/media-keys/screen-brightness-down
      value: "['F11']" 
  - name: clock am pm gnome
    become_user: matt
    community.general.dconf:
      key: /org/gnome/desktop/interface/clock-format
      value: "'12h'" 
  - name: clock am pm gtk
    become_user: matt
    community.general.dconf:
      key: /org/gtk/settings/file-chooser/clock-format
      value: "'12h'" 
  - name: clock day of week
    become_user: matt
    community.general.dconf:
      key: /org/gnome/desktop/interface/clock-show-weekday 
      value: 'true' 
  - name: Night Light ON
    become_user: matt
    community.general.dconf:
      key: /org/gnome/settings-daemon/plugins/color/night-light-enabled
      value: 'true' 
  - name: Night Light temp
    become_user: matt
    community.general.dconf:
      key: /org/gnome/settings-daemon/plugins/color/night-light-temperature
      value: "uint32 3979"
  - name: Night Light schedule
    become_user: matt
    community.general.dconf:
      key: /org/gnome/settings-daemon/plugins/color/night-light-schedule-automatic
      value: 'true' 

  - name: dont do anything with media insertion
    become_user: matt
    community.general.dconf:
      key: /org/gnome/desktop/media-handling/autorun-never
      value: 'true' 

  - name: git dotfiles
    become_user: matt
    ansible.builtin.git:
      repo: https://github.com/woodroww/.dotfiles.git 
      dest: /home/matt/.dotfiles

  - name: make local bin directory
    become_user: matt
    file:
      path: /home/matt/.local/bin
      state: directory

  - name: stow things
    become_user: matt
    ansible.builtin.shell:
      cmd: stow luanvim kali_zsh git scripts newsboat
      chdir: "/home/matt/.dotfiles"

  - name: Install apt-transport-https
    tags: google-chrome
    ansible.builtin.apt:
      state: latest
      update_cache: true
  - name: Add Apt signing key
    tags: google-chrome
    ansible.builtin.apt_key:
      url: "https://dl.google.com/linux/linux_signing_key.pub"
      state: present
  - name: Add repository into sources list
    tags: google-chrome
    ansible.builtin.apt_repository:
      repo: deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main
      state: present
      filename: google-chrome
  - name: Install google-chrome-stable
    tags: google-chrome
    ansible.builtin.apt:
      name: "google-chrome-stable"
      state: latest
      update_cache: true
  - name: chrome dark
    tags: google-chrome
    become_user: matt
    ansible.builtin.shell:
      cmd: cp /usr/share/applications/google-chrome.desktop ~/.local/share/applications/google-chrome.desktop
  - name: chrome dark part 2
    tags: google-chrome
    become_user: matt
    ansible.builtin.shell:
      cmd: sed -i 's;/usr/bin/google-chrome-stable;/usr/bin/google-chrome-stable --enable-features=WebUIDarkMode --force-dark-mode;g' ~/.local/share/applications/google-chrome.desktop

# - name: Add Spotify apt signing key
#   ansible.builtin.apt_key:
#     url: "https://download.spotify.com/debian/pubkey_7A3A762FAFD4A51F.gpg"
#     state: present
#     keyring: "/etc/apt/trusted.gpg.d/spotify.gpg"
# - name: Add Spotify repository into sources list
#   ansible.builtin.apt_repository:
#     repo: deb [arch=amd64] http://repository.spotify.com stable non-free
#     state: present
#     filename: spotify
# - name: Install Spotify
#   ansible.builtin.apt:
#     name: "spotify-client"
#     state: latest
#     update_cache: true
#
#   - name: Add 1Password apt signing key
#     ansible.builtin.apt_key:
#       url: "https://downloads.1password.com/linux/keys/1password.asc"
#       state: present
#       keyring: "/usr/share/keyrings/1password-archive-keyring.gpg"
#   - name: Add 1Password repository into sources list
#     ansible.builtin.apt_repository:
#       repo: deb [arch=amd64 signed-by=/usr/share/keyrings/1password-archive-keyring.gpg] https://downloads.1password.com/linux/debian/amd64 stable main
#       state: present
#       filename: 1password
#   - name: add the debsig-verify policy
# https://support.1password.com/install-linux/
# sudo mkdir -p /etc/debsig/policies/AC2D62742012EA22/
# curl -sS https://downloads.1password.com/linux/debian/debsig/1password.pol | sudo tee /etc/debsig/policies/AC2D62742012EA22/1password.pol
# sudo mkdir -p /usr/share/debsig/keyrings/AC2D62742012EA22
# curl -sS https://downloads.1password.com/linux/keys/1password.asc | sudo gpg --dearmor --output /usr/share/debsig/keyrings/AC2D62742012EA22/debsig.gpg
# 
#   - name: Install1Password 
#     ansible.builtin.apt:
#       name: "1password"
#       state: latest
#       update_cache: true

  - name: make prog dirs
    become_user: matt
    file:
      path: /home/matt/prog/extern
      state: directory

  - name: git nvim
    become_user: matt
    git:
      repo: https://github.com/neovim/neovim
      dest: /home/matt/prog/extern/neovim
      clone: yes
      version: stable
  - name: build nvim
    become_user: matt
    ansible.builtin.shell:
      cmd: make CMAKE_BUILD_TYPE=Release
      chdir: "/home/matt/prog/extern/neovim"
  - name: package nvim
    become_user: matt
    ansible.builtin.shell:
      cmd: cpack -G DEB
      chdir: "/home/matt/prog/extern/neovim/build"
  - name: install nvim
    ansible.builtin.shell:
      cmd: dpkg -i nvim-linux64.deb
      chdir: "/home/matt/prog/extern/neovim/build"

  - name: git pyenv
    become_user: matt
    git:
      repo: https://github.com/pyenv/pyenv.git
      dest: /home/matt/.pyenv
      clone: yes
  - name: git pyenv-virtualenv 
    become_user: matt
    git:
      repo: https://github.com/pyenv/pyenv-virtualenv.git
      dest: /home/matt/.pyenv/plugins/pyenv-virtualenv
      clone: yes

  - name: get rust
    get_url:
      url: https://sh.rustup.rs
      dest: /tmp/sh.rustup.rs
      mode: '0755'
      force: 'yes'
  - name: install rust
    become_user: matt
    ansible.builtin.shell: /tmp/sh.rustup.rs -y

  - name: turn on firewall
    community.general.ufw:
      state: enabled
      default: deny
  - name: allow ssh
    community.general.ufw:
      rule: allow
      name: OpenSSH
